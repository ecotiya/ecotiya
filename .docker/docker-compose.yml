version: '3.8'
services:
  db:
    container_name: ecotiya_mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./mysql/db.env.local
    ports:
      - 3310:3306
    volumes:
      - ./mysql/data:/var/lib/mysql # 実データの永続化
      - ./mysql/log:/var/log/mysql  # logの永続化

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: ecotiya_nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - conf:/etc/nginx/conf.d
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: ecotiya_nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  frontend:
    container_name: ecotiya_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    tty: true
    restart: always
    working_dir: /app-frontend
    volumes:
      - ../frontend:/app-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
          condition: service_started

  backend:
    container_name: ecotiya_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./mysql/db.env.local
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db/ecotiya_com
    stdin_open: true
    tty: true
    restart: always
    working_dir: /app-backend
    volumes:
      - ../backend:/app-backend # Spring Bootのプロジェクト
    command:
      bash -c "./gradlew build && gradle bootRun"
    ports:
      - 8080:8080 # 通常実行
    depends_on:
      db:
        condition: service_started

volumes:
  conf:
  certs:
  vhost:
  html:
  acme: